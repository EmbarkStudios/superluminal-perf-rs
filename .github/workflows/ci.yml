on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

name: CI
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # make sure all code has been formatted with rustfmt
      - run: rustup component add rustfmt
      - name: check rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check --color always

      # run clippy to verify we have no warnings
      - run: rustup component add clippy
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      # When under Windows, add the x86 target as well.
      - if: runner.os == 'Windows'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: i686-pc-windows-msvc
          override: true

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
      # When under Windows, run with the x86 target as well.
      - if: runner.os == 'Windows'
        name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target i686-pc-windows-msvc

  example:
    name: Example
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      # When under Windows, add the x86 target as well.
      - if: runner.os == 'Windows'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: i686-pc-windows-msvc
          override: true

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      # When under Windows, build with the x86 target as well.
      - if: runner.os == 'Windows'
        name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target i686-pc-windows-msvc --release

      - name: run example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --release --example basic
      # When under Windows, run with the x86 target as well.
      - if: runner.os == 'Windows'
        name: run example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --target i686-pc-windows-msvc --release --example basic
